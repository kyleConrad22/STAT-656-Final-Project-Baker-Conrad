vec <- c("average bag wt (n=10) = 6.733", "changed from 17.34 to 27.34 after rechecking", "2 bags combined for one sample", "average bag wt (n=10) = 1.437", "Some of the brown bags differed in type due to location where the bags were purchased. The two types of bag used were lunch bags and giant lunch bags. The lunch bags were smaller and the giant lunch bags were larger. Average weight of small bag (n = 10) = 7.297; average weight of large bag (n = 10) = 10.241.", "very little vegetation", "bubble in compass", "Ambrosia", "B4 on bag", "Dry plants")
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Check the notes variables and set mass to 0 when no biomass was collected, per notes variable
vec <- c("no biomass to collect", "no sample; average bag wt (n=10) = 6.733", "no biomass to collect in sample quad; average bag wt (n=10) = 1.437", "no plants to collect")
annuals_biomass$mass[annuals_biomass$notes %in% vec] <- 0
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Remaining observations have unresolved sampling errors therefore these observations are dropped.
vec <- unique(annuals_biomass$notes)
vec <- vec[!is.na(vec)]
annuals_biomass <- subset(annuals_biomass, !(notes %in% vec))
# Drop notes variable
annuals_biomass <- subset(annuals_biomass, select=-c(notes))
# Samples are collected in the spring each year and sampled once a year, therefore, date variable contains no useful information for this analysis. Drop the date variable
annuals_biomass <- subset(annuals_biomass, select=-c(date))
# If mass is NA for any other observations then will remove those observations. Cannot determine reasoning behind the NA's.
annuals_biomass <- subset(annuals_biomass, !is.na(mass))
# plot_id contains the same information as treatment_code, therefore it will be dropped
annuals_biomass <- subset(annuals_biomass, select = -c(plot_id))
rm(vec)
# Begin by dropping the date variable for similar reasons as its removal from annuals_biomass
annuals_composition <- subset(annuals_composition, select=-c(date))
# Observations of cover_type == "sampled" contain no pertinent information, therefore, they will be dropped
annuals_composition <- subset(annuals_composition, cover_type != "sampled")
# Similarly, cover_category contains no useful information for this analysis and will therefore be dropped.
annuals_composition <- subset(annuals_composition, select = -c(cover_category))
# Additionally, drop the collector variable. Since this variable is not shared with biomass it cannot be used for analysis.
annuals_composition <- subset(annuals_composition, select = -c(collector))
# Now, collate the data by cover_type and set NA values to 0. That is, NA values are assumed to be observations where the plant was not observed.
annuals_composition_collated <- annuals_composition %>%
pivot_wider(names_from = cover_type, values_from = cover_amount)
annuals_composition_collated[is.na(annuals_composition_collated)] <- 0
annuals_composition <- annuals_composition_collated
# Finally, note that the observation: site_code == "PWP", plot_id == 33, treatment_code == "C1", location_within_plot == "P", subplot == 2, and year == "2013"; has a far outlying total_shrub_cover variable value (7.000). It is assumed that this was a mistake in data collection and as such will be set as the sum of all other observed covers.
# This task is ignored for the time being as this data will not be used for analysis.
# Remove unused variables from the environment
rm(annuals_composition_collated, annuals_composition)
# Remove unused dataset from the environment
rm(plant_root_simulator)
# Remove unused dataset from the environment
rm(fertilizer_application)
rm(tissue_chn, tissue_icp, stem_growth)
# Examine the notes variable values and see if there are any observations which should be removed
unique(atmospheric_deposition$notes)
# None of the observations appear to need to be removed, therefore, the notes variable can be safely dropped.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(notes))
# Remove the all observations where field_id == "KCl_blank" this obesrvation is not useful for analysis.
atmospheric_deposition <- subset(atmospheric_deposition, field_id != "KCl_blank")
# Note that run_id is not useful for this analysis, it will therefore be removed.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(run_id))
# Now collate the data set such that it is in a usable format.
atmospheric_deposition <- atmospheric_deposition %>% pivot_wider(names_from = analyte_name, values_from = concentration)
# Note that there are a number of observations where either Ammonia or Nitrate/Nitrite are NA. There is enough data available that these observations can be safety dropped.
atmospheric_deposition <- subset(atmospheric_deposition, !is.na(Ammonia) & !is.na(`NItrate/Nitrite`))
# Remove observations which cannot be used for analysis based on field_id value.
atmospheric_deposition <- subset(atmospheric_deposition, !(field_id %in% c("resin.KCl.1", "resin.KCl.2", "resin.KCl.3")))
sum(is.na(annuals_biomass))
sum(is.na(atmospheric_deposition))
# Begin by removing observations of annuals_biomass which don't align with requirements outlined previously.
# First year in which a full year (Summer to Spring) of data is available in atmospheric_decomposition is 2010. Therefore, a full 4 years worth of data is not available until 2014.
annuals_biomass <- subset(annuals_biomass, year > 2013)
# Format the date in atmospheric deposition and remove old date variable
atmospheric_deposition$year <- format(as.Date(atmospheric_deposition$collection_date, format = "%Y-%m-%d"), "%Y")
atmospheric_deposition$month <- format(as.Date(atmospheric_deposition$collection_date, format="%Y-%m-%d"), "%m")
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(collection_date))
# Change month variable into a more interpretable season variable
atmospheric_deposition$month <- as.numeric(atmospheric_deposition$month)
atmospheric_deposition$season <- ifelse(atmospheric_deposition$month %in% c(2, 3, 4), "Spring",
ifelse(atmospheric_deposition$month %in% c(5,6,7), "Summer",
ifelse(atmospheric_deposition$month %in% c(8,9,10), "Fall", "Winter")))
# Observations for winter of a given year can be made in January of the following year.
atmospheric_deposition$year <- as.numeric(atmospheric_deposition$year)
atmospheric_deposition$year[atmospheric_deposition$month == 1] =
atmospheric_deposition$year[atmospheric_deposition$month == 1] - 1
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(month))
atmospheric_deposition <- atmospheric_deposition[!grepl("CNTL", atmospheric_deposition$field_id), ]
unique(atmospheric_deposition$field_id)
unique(atmospheric_deposition$site_code)
atmospheric_deposition <- subset(atmospheric_deposition, !(site_code %in% c("GTW", "LVE")))
unique(atmospheric_deposition$site_code)
unique(atmospheric_deposition$field_id)
# Create a single measure of atmospheric deposition for each season at each site by taking the average of all observations for that site, season and year.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(field_id))
atmospheric_deposition <- atmospheric_deposition %>%
group_by(site_code, year, season) %>%
summarize(Ammonia = mean(Ammonia), `Nitrate/Nitrite` = mean(`NItrate/Nitrite`))
sum(is.na(atmospheric_deposition))
# Amend data where a season's data is missing by setting the value during that season as the average across all observations of missing season at the given site
atmospheric_deposition <- atmospheric_deposition %>% complete(site_code, year, season)
atmospheric_deposition <- data.frame(atmospheric_deposition)
atmospheric_deposition <- atmospheric_deposition[!grepl("MONTH", atmospheric_deposition$field_id), ]
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # For re-formatting data sets
library(lubridate) # For manipulations of date columns
annuals_biomass <- read.csv("Data/632_annuals_biomass.csv")
annuals_composition <- read.csv("Data/632_annuals_composition.csv")
atmospheric_deposition <- read.csv("Data/632_atmospheric_deposition.csv")
fertilizer_application <- read.csv("Data/632_fertilizer_application.csv")
plant_root_simulator <- read.csv("Data/632_plant_root_simulator.csv")
stem_growth <- read.csv("Data/632_stem_growth.csv")
tissue_chn <- read.csv("Data/632_tissue_chn.csv")
tissue_icp <- read.csv("Data/632_tissue_icp.csv")
# Check number of missing subquad_orientation measurements
sum(is.na(annuals_biomass$subquad_orientation))
# Drop subquad_orientation from data set due to high number of missing observations
annuals_biomass <- subset(annuals_biomass, select = -c(subquad_orientation))
# Remove uninformative notes variable values
unique(annuals_biomass$notes)
vec <- c("average bag wt (n=10) = 6.733", "changed from 17.34 to 27.34 after rechecking", "2 bags combined for one sample", "average bag wt (n=10) = 1.437", "Some of the brown bags differed in type due to location where the bags were purchased. The two types of bag used were lunch bags and giant lunch bags. The lunch bags were smaller and the giant lunch bags were larger. Average weight of small bag (n = 10) = 7.297; average weight of large bag (n = 10) = 10.241.", "very little vegetation", "bubble in compass", "Ambrosia", "B4 on bag", "Dry plants")
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Check the notes variables and set mass to 0 when no biomass was collected, per notes variable
vec <- c("no biomass to collect", "no sample; average bag wt (n=10) = 6.733", "no biomass to collect in sample quad; average bag wt (n=10) = 1.437", "no plants to collect")
annuals_biomass$mass[annuals_biomass$notes %in% vec] <- 0
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Remaining observations have unresolved sampling errors therefore these observations are dropped.
vec <- unique(annuals_biomass$notes)
vec <- vec[!is.na(vec)]
annuals_biomass <- subset(annuals_biomass, !(notes %in% vec))
# Drop notes variable
annuals_biomass <- subset(annuals_biomass, select=-c(notes))
# Samples are collected in the spring each year and sampled once a year, therefore, date variable contains no useful information for this analysis. Drop the date variable
annuals_biomass <- subset(annuals_biomass, select=-c(date))
# If mass is NA for any other observations then will remove those observations. Cannot determine reasoning behind the NA's.
annuals_biomass <- subset(annuals_biomass, !is.na(mass))
# plot_id contains the same information as treatment_code, therefore it will be dropped
annuals_biomass <- subset(annuals_biomass, select = -c(plot_id))
rm(vec)
# Begin by dropping the date variable for similar reasons as its removal from annuals_biomass
annuals_composition <- subset(annuals_composition, select=-c(date))
# Observations of cover_type == "sampled" contain no pertinent information, therefore, they will be dropped
annuals_composition <- subset(annuals_composition, cover_type != "sampled")
# Similarly, cover_category contains no useful information for this analysis and will therefore be dropped.
annuals_composition <- subset(annuals_composition, select = -c(cover_category))
# Additionally, drop the collector variable. Since this variable is not shared with biomass it cannot be used for analysis.
annuals_composition <- subset(annuals_composition, select = -c(collector))
# Now, collate the data by cover_type and set NA values to 0. That is, NA values are assumed to be observations where the plant was not observed.
annuals_composition_collated <- annuals_composition %>%
pivot_wider(names_from = cover_type, values_from = cover_amount)
annuals_composition_collated[is.na(annuals_composition_collated)] <- 0
annuals_composition <- annuals_composition_collated
# Finally, note that the observation: site_code == "PWP", plot_id == 33, treatment_code == "C1", location_within_plot == "P", subplot == 2, and year == "2013"; has a far outlying total_shrub_cover variable value (7.000). It is assumed that this was a mistake in data collection and as such will be set as the sum of all other observed covers.
# This task is ignored for the time being as this data will not be used for analysis.
# Remove unused variables from the environment
rm(annuals_composition_collated, annuals_composition)
# Remove unused dataset from the environment
rm(plant_root_simulator)
# Remove unused dataset from the environment
rm(fertilizer_application)
rm(tissue_chn, tissue_icp, stem_growth)
# Examine the notes variable values and see if there are any observations which should be removed
unique(atmospheric_deposition$notes)
# None of the observations appear to need to be removed, therefore, the notes variable can be safely dropped.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(notes))
# Remove the all observations where field_id == "KCl_blank" this obesrvation is not useful for analysis.
atmospheric_deposition <- subset(atmospheric_deposition, field_id != "KCl_blank")
# Note that run_id is not useful for this analysis, it will therefore be removed.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(run_id))
# Now collate the data set such that it is in a usable format.
atmospheric_deposition <- atmospheric_deposition %>% pivot_wider(names_from = analyte_name, values_from = concentration)
# Note that there are a number of observations where either Ammonia or Nitrate/Nitrite are NA. There is enough data available that these observations can be safety dropped.
atmospheric_deposition <- subset(atmospheric_deposition, !is.na(Ammonia) & !is.na(`NItrate/Nitrite`))
# Remove observations which cannot be used for analysis based on field_id value.
atmospheric_deposition <- subset(atmospheric_deposition, !(field_id %in% c("resin.KCl.1", "resin.KCl.2", "resin.KCl.3")))
# Begin by removing observations of annuals_biomass which don't align with requirements outlined previously.
# First year in which a full year (Summer to Spring) of data is available in atmospheric_decomposition is 2010. Therefore, a full 4 years worth of data is not available until 2014.
annuals_biomass <- subset(annuals_biomass, year > 2013)
# Format the date in atmospheric deposition and remove old date variable
atmospheric_deposition$year <- format(as.Date(atmospheric_deposition$collection_date, format = "%Y-%m-%d"), "%Y")
atmospheric_deposition$month <- format(as.Date(atmospheric_deposition$collection_date, format="%Y-%m-%d"), "%m")
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(collection_date))
# Change month variable into a more interpretable season variable
atmospheric_deposition$month <- as.numeric(atmospheric_deposition$month)
atmospheric_deposition$season <- ifelse(atmospheric_deposition$month %in% c(2, 3, 4), "Spring",
ifelse(atmospheric_deposition$month %in% c(5,6,7), "Summer",
ifelse(atmospheric_deposition$month %in% c(8,9,10), "Fall", "Winter")))
# Observations for winter of a given year can be made in January of the following year.
atmospheric_deposition$year <- as.numeric(atmospheric_deposition$year)
atmospheric_deposition$year[atmospheric_deposition$month == 1] =
atmospheric_deposition$year[atmospheric_deposition$month == 1] - 1
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(month))
# Remove observations of atmospheric_deposition which contain no usable information
atmospheric_deposition <- subset(atmospheric_deposition, year != 2008 & !(year == 2009 & season == "Spring"))
atmospheric_deposition <- atmospheric_deposition[!grepl("CNTL", atmospheric_deposition$field_id), ]
atmospheric_deposition <- subset(atmospheric_deposition, !(site_code %in% c("GTW", "LVE")))
atmospheric_deposition <- atmospheric_deposition[!grepl("MONTH", atmospheric_deposition$field_id), ]
# Create a single measure of atmospheric deposition for each season at each site by taking the average of all observations for that site, season and year.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(field_id))
atmospheric_deposition <- atmospheric_deposition %>%
group_by(site_code, year, season) %>%
summarize(Ammonia = mean(Ammonia), `Nitrate/Nitrite` = mean(`NItrate/Nitrite`))
atmospheric_deposition <- data.frame(atmospheric_deposition)
# Amend data where a season's data is missing by setting the value during that season as the average across all observations of missing season at the given site
atmospheric_deposition <- atmospheric_deposition %>% complete(site_code, year, season)
View(atmospheric_deposition)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # For re-formatting data sets
library(lubridate) # For manipulations of date columns
annuals_biomass <- read.csv("Data/632_annuals_biomass.csv")
annuals_composition <- read.csv("Data/632_annuals_composition.csv")
atmospheric_deposition <- read.csv("Data/632_atmospheric_deposition.csv")
fertilizer_application <- read.csv("Data/632_fertilizer_application.csv")
plant_root_simulator <- read.csv("Data/632_plant_root_simulator.csv")
stem_growth <- read.csv("Data/632_stem_growth.csv")
tissue_chn <- read.csv("Data/632_tissue_chn.csv")
tissue_icp <- read.csv("Data/632_tissue_icp.csv")
# Check number of missing subquad_orientation measurements
sum(is.na(annuals_biomass$subquad_orientation))
# Drop subquad_orientation from data set due to high number of missing observations
annuals_biomass <- subset(annuals_biomass, select = -c(subquad_orientation))
# Remove uninformative notes variable values
unique(annuals_biomass$notes)
vec <- c("average bag wt (n=10) = 6.733", "changed from 17.34 to 27.34 after rechecking", "2 bags combined for one sample", "average bag wt (n=10) = 1.437", "Some of the brown bags differed in type due to location where the bags were purchased. The two types of bag used were lunch bags and giant lunch bags. The lunch bags were smaller and the giant lunch bags were larger. Average weight of small bag (n = 10) = 7.297; average weight of large bag (n = 10) = 10.241.", "very little vegetation", "bubble in compass", "Ambrosia", "B4 on bag", "Dry plants")
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Check the notes variables and set mass to 0 when no biomass was collected, per notes variable
vec <- c("no biomass to collect", "no sample; average bag wt (n=10) = 6.733", "no biomass to collect in sample quad; average bag wt (n=10) = 1.437", "no plants to collect")
annuals_biomass$mass[annuals_biomass$notes %in% vec] <- 0
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Remaining observations have unresolved sampling errors therefore these observations are dropped.
vec <- unique(annuals_biomass$notes)
vec <- vec[!is.na(vec)]
annuals_biomass <- subset(annuals_biomass, !(notes %in% vec))
# Drop notes variable
annuals_biomass <- subset(annuals_biomass, select=-c(notes))
# Samples are collected in the spring each year and sampled once a year, therefore, date variable contains no useful information for this analysis. Drop the date variable
annuals_biomass <- subset(annuals_biomass, select=-c(date))
# If mass is NA for any other observations then will remove those observations. Cannot determine reasoning behind the NA's.
annuals_biomass <- subset(annuals_biomass, !is.na(mass))
# plot_id contains the same information as treatment_code, therefore it will be dropped
annuals_biomass <- subset(annuals_biomass, select = -c(plot_id))
rm(vec)
# Begin by dropping the date variable for similar reasons as its removal from annuals_biomass
annuals_composition <- subset(annuals_composition, select=-c(date))
# Observations of cover_type == "sampled" contain no pertinent information, therefore, they will be dropped
annuals_composition <- subset(annuals_composition, cover_type != "sampled")
# Similarly, cover_category contains no useful information for this analysis and will therefore be dropped.
annuals_composition <- subset(annuals_composition, select = -c(cover_category))
# Additionally, drop the collector variable. Since this variable is not shared with biomass it cannot be used for analysis.
annuals_composition <- subset(annuals_composition, select = -c(collector))
# Now, collate the data by cover_type and set NA values to 0. That is, NA values are assumed to be observations where the plant was not observed.
annuals_composition_collated <- annuals_composition %>%
pivot_wider(names_from = cover_type, values_from = cover_amount)
annuals_composition_collated[is.na(annuals_composition_collated)] <- 0
annuals_composition <- annuals_composition_collated
# Finally, note that the observation: site_code == "PWP", plot_id == 33, treatment_code == "C1", location_within_plot == "P", subplot == 2, and year == "2013"; has a far outlying total_shrub_cover variable value (7.000). It is assumed that this was a mistake in data collection and as such will be set as the sum of all other observed covers.
# This task is ignored for the time being as this data will not be used for analysis.
# Remove unused variables from the environment
rm(annuals_composition_collated, annuals_composition)
# Remove unused dataset from the environment
rm(plant_root_simulator)
# Remove unused dataset from the environment
rm(fertilizer_application)
rm(tissue_chn, tissue_icp, stem_growth)
# Examine the notes variable values and see if there are any observations which should be removed
unique(atmospheric_deposition$notes)
# None of the observations appear to need to be removed, therefore, the notes variable can be safely dropped.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(notes))
# Remove the all observations where field_id == "KCl_blank" this obesrvation is not useful for analysis.
atmospheric_deposition <- subset(atmospheric_deposition, field_id != "KCl_blank")
# Note that run_id is not useful for this analysis, it will therefore be removed.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(run_id))
# Now collate the data set such that it is in a usable format.
atmospheric_deposition <- atmospheric_deposition %>% pivot_wider(names_from = analyte_name, values_from = concentration)
# Note that there are a number of observations where either Ammonia or Nitrate/Nitrite are NA. There is enough data available that these observations can be safety dropped.
atmospheric_deposition <- subset(atmospheric_deposition, !is.na(Ammonia) & !is.na(`NItrate/Nitrite`))
# Remove observations which cannot be used for analysis based on field_id value.
atmospheric_deposition <- subset(atmospheric_deposition, !(field_id %in% c("resin.KCl.1", "resin.KCl.2", "resin.KCl.3")))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # For re-formatting data sets
library(lubridate) # For manipulations of date columns
annuals_biomass <- read.csv("Data/632_annuals_biomass.csv")
annuals_composition <- read.csv("Data/632_annuals_composition.csv")
atmospheric_deposition <- read.csv("Data/632_atmospheric_deposition.csv")
fertilizer_application <- read.csv("Data/632_fertilizer_application.csv")
plant_root_simulator <- read.csv("Data/632_plant_root_simulator.csv")
stem_growth <- read.csv("Data/632_stem_growth.csv")
tissue_chn <- read.csv("Data/632_tissue_chn.csv")
tissue_icp <- read.csv("Data/632_tissue_icp.csv")
# Check number of missing subquad_orientation measurements
sum(is.na(annuals_biomass$subquad_orientation))
# Drop subquad_orientation from data set due to high number of missing observations
annuals_biomass <- subset(annuals_biomass, select = -c(subquad_orientation))
# Remove uninformative notes variable values
unique(annuals_biomass$notes)
vec <- c("average bag wt (n=10) = 6.733", "changed from 17.34 to 27.34 after rechecking", "2 bags combined for one sample", "average bag wt (n=10) = 1.437", "Some of the brown bags differed in type due to location where the bags were purchased. The two types of bag used were lunch bags and giant lunch bags. The lunch bags were smaller and the giant lunch bags were larger. Average weight of small bag (n = 10) = 7.297; average weight of large bag (n = 10) = 10.241.", "very little vegetation", "bubble in compass", "Ambrosia", "B4 on bag", "Dry plants")
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Check the notes variables and set mass to 0 when no biomass was collected, per notes variable
vec <- c("no biomass to collect", "no sample; average bag wt (n=10) = 6.733", "no biomass to collect in sample quad; average bag wt (n=10) = 1.437", "no plants to collect")
annuals_biomass$mass[annuals_biomass$notes %in% vec] <- 0
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Remaining observations have unresolved sampling errors therefore these observations are dropped.
vec <- unique(annuals_biomass$notes)
vec <- vec[!is.na(vec)]
annuals_biomass <- subset(annuals_biomass, !(notes %in% vec))
# Drop notes variable
annuals_biomass <- subset(annuals_biomass, select=-c(notes))
# Samples are collected in the spring each year and sampled once a year, therefore, date variable contains no useful information for this analysis. Drop the date variable
annuals_biomass <- subset(annuals_biomass, select=-c(date))
# If mass is NA for any other observations then will remove those observations. Cannot determine reasoning behind the NA's.
annuals_biomass <- subset(annuals_biomass, !is.na(mass))
# plot_id contains the same information as treatment_code, therefore it will be dropped
annuals_biomass <- subset(annuals_biomass, select = -c(plot_id))
rm(vec)
# Begin by dropping the date variable for similar reasons as its removal from annuals_biomass
annuals_composition <- subset(annuals_composition, select=-c(date))
# Observations of cover_type == "sampled" contain no pertinent information, therefore, they will be dropped
annuals_composition <- subset(annuals_composition, cover_type != "sampled")
# Similarly, cover_category contains no useful information for this analysis and will therefore be dropped.
annuals_composition <- subset(annuals_composition, select = -c(cover_category))
# Additionally, drop the collector variable. Since this variable is not shared with biomass it cannot be used for analysis.
annuals_composition <- subset(annuals_composition, select = -c(collector))
# Now, collate the data by cover_type and set NA values to 0. That is, NA values are assumed to be observations where the plant was not observed.
annuals_composition_collated <- annuals_composition %>%
pivot_wider(names_from = cover_type, values_from = cover_amount)
annuals_composition_collated[is.na(annuals_composition_collated)] <- 0
annuals_composition <- annuals_composition_collated
# Finally, note that the observation: site_code == "PWP", plot_id == 33, treatment_code == "C1", location_within_plot == "P", subplot == 2, and year == "2013"; has a far outlying total_shrub_cover variable value (7.000). It is assumed that this was a mistake in data collection and as such will be set as the sum of all other observed covers.
# This task is ignored for the time being as this data will not be used for analysis.
# Remove unused variables from the environment
rm(annuals_composition_collated, annuals_composition)
# Remove unused dataset from the environment
rm(plant_root_simulator)
# Remove unused dataset from the environment
rm(fertilizer_application)
rm(tissue_chn, tissue_icp, stem_growth)
# Examine the notes variable values and see if there are any observations which should be removed
unique(atmospheric_deposition$notes)
# None of the observations appear to need to be removed, therefore, the notes variable can be safely dropped.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(notes))
# Remove the all observations where field_id == "KCl_blank" this obesrvation is not useful for analysis.
atmospheric_deposition <- subset(atmospheric_deposition, field_id != "KCl_blank")
# Note that run_id is not useful for this analysis, it will therefore be removed.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(run_id))
# Now collate the data set such that it is in a usable format.
atmospheric_deposition <- atmospheric_deposition %>% pivot_wider(names_from = analyte_name, values_from = concentration)
# Note that there are a number of observations where either Ammonia or Nitrate/Nitrite are NA. There is enough data available that these observations can be safety dropped.
atmospheric_deposition <- subset(atmospheric_deposition, !is.na(Ammonia) & !is.na(`NItrate/Nitrite`))
# Remove observations which cannot be used for analysis based on field_id value.
atmospheric_deposition <- subset(atmospheric_deposition, !(field_id %in% c("resin.KCl.1", "resin.KCl.2", "resin.KCl.3")))
# Investigate the number of missing observations
print(paste("There are", sum(is.na(atmospheric_deposition$Ammonia)), "missing Ammonia measurements and", sum(is.na(atmospheric_deposition$`NItrate/Nitrite`)), "Nitrate/Nitrite measurements."))
```{r}
# Format the date in atmospheric deposition and remove old date variable
atmospheric_deposition$year <- format(as.Date(atmospheric_deposition$collection_date, format = "%Y-%m-%d"), "%Y")
atmospheric_deposition$month <- format(as.Date(atmospheric_deposition$collection_date, format="%Y-%m-%d"), "%m")
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(collection_date))
# Change month variable into a more interpretable season variable
atmospheric_deposition$month <- as.numeric(atmospheric_deposition$month)
atmospheric_deposition$season <- ifelse(atmospheric_deposition$month %in% c(2, 3, 4), "Spring",
ifelse(atmospheric_deposition$month %in% c(5,6,7), "Summer",
ifelse(atmospheric_deposition$month %in% c(8,9,10), "Fall", "Winter")))
# Observations for winter of a given year can be made in January of the following year.
atmospheric_deposition$year <- as.numeric(atmospheric_deposition$year)
atmospheric_deposition$year[atmospheric_deposition$month == 1] =
atmospheric_deposition$year[atmospheric_deposition$month == 1] - 1
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(month))
# Remove observations of atmospheric_deposition which contain no usable information
atmospheric_deposition <- subset(atmospheric_deposition, year != 2008 & !(year == 2009 & season == "Spring"))
atmospheric_deposition <- atmospheric_deposition[!grepl("CNTL", atmospheric_deposition$field_id), ]
atmospheric_deposition <- subset(atmospheric_deposition, !(site_code %in% c("GTW", "LVE")))
atmospheric_deposition <- atmospheric_deposition[!grepl("MONTH", atmospheric_deposition$field_id), ]
# Create a single measure of atmospheric deposition for each season at each site by taking the average of all observations for that site, season and year.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(field_id))
atmospheric_deposition <- atmospheric_deposition %>%
group_by(site_code, year, season) %>%
summarize(Ammonia = mean(Ammonia), `Nitrate/Nitrite` = mean(`NItrate/Nitrite`))
atmospheric_deposition <- data.frame(atmospheric_deposition)
# Amend data with all unique combinations of season, year, and site_code
atmospheric_deposition <- atmospheric_deposition %>% complete(site_code, year, season)
# Investigate the number of missing observations
print(paste("There are", sum(is.na(atmospheric_deposition$Ammonia)), "missing Ammonia measurements and", sum(is.na(atmospheric_deposition$`NItrate/Nitrite`)), "Nitrate/Nitrite measurements."))
# Investigate the number of missing observations
print(paste("There are", sum(is.na(atmospheric_deposition$Ammonia)), "missing Ammonia measurements and", sum(is.na(atmospheric_deposition$`Nitrate.Nitrite`)), "Nitrate/Nitrite measurements."))
# Investigate the number of missing observations
print(paste("There are", sum(is.na(atmospheric_deposition$Ammonia) | is.na(atmospheric_deposition$Nitrate.Nitrite)), "missing Ammonia measurements and", sum(is.na(atmospheric_deposition$`Nitrate.Nitrite`)), "missing Nitrate/Nitrite measurements."))
# Investigate the number of missing observations
print(paste("There are", sum(is.na(atmospheric_deposition$Ammonia) & is.na(atmospheric_deposition$Nitrate.Nitrite)), "missing Ammonia measurements and", sum(is.na(atmospheric_deposition$`Nitrate.Nitrite`)), "missing Nitrate/Nitrite measurements."))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse) # For re-formatting data sets
library(lubridate) # For manipulations of date columns
annuals_biomass <- read.csv("Data/632_annuals_biomass.csv")
annuals_composition <- read.csv("Data/632_annuals_composition.csv")
atmospheric_deposition <- read.csv("Data/632_atmospheric_deposition.csv")
fertilizer_application <- read.csv("Data/632_fertilizer_application.csv")
plant_root_simulator <- read.csv("Data/632_plant_root_simulator.csv")
stem_growth <- read.csv("Data/632_stem_growth.csv")
tissue_chn <- read.csv("Data/632_tissue_chn.csv")
tissue_icp <- read.csv("Data/632_tissue_icp.csv")
# Check number of missing subquad_orientation measurements
sum(is.na(annuals_biomass$subquad_orientation))
# Drop subquad_orientation from data set due to high number of missing observations
annuals_biomass <- subset(annuals_biomass, select = -c(subquad_orientation))
# Remove uninformative notes variable values
unique(annuals_biomass$notes)
vec <- c("average bag wt (n=10) = 6.733", "changed from 17.34 to 27.34 after rechecking", "2 bags combined for one sample", "average bag wt (n=10) = 1.437", "Some of the brown bags differed in type due to location where the bags were purchased. The two types of bag used were lunch bags and giant lunch bags. The lunch bags were smaller and the giant lunch bags were larger. Average weight of small bag (n = 10) = 7.297; average weight of large bag (n = 10) = 10.241.", "very little vegetation", "bubble in compass", "Ambrosia", "B4 on bag", "Dry plants")
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Check the notes variables and set mass to 0 when no biomass was collected, per notes variable
vec <- c("no biomass to collect", "no sample; average bag wt (n=10) = 6.733", "no biomass to collect in sample quad; average bag wt (n=10) = 1.437", "no plants to collect")
annuals_biomass$mass[annuals_biomass$notes %in% vec] <- 0
annuals_biomass$notes[annuals_biomass$notes %in% vec] <- NA
# Remaining observations have unresolved sampling errors therefore these observations are dropped.
vec <- unique(annuals_biomass$notes)
vec <- vec[!is.na(vec)]
annuals_biomass <- subset(annuals_biomass, !(notes %in% vec))
# Drop notes variable
annuals_biomass <- subset(annuals_biomass, select=-c(notes))
# Samples are collected in the spring each year and sampled once a year, therefore, date variable contains no useful information for this analysis. Drop the date variable
annuals_biomass <- subset(annuals_biomass, select=-c(date))
# If mass is NA for any other observations then will remove those observations. Cannot determine reasoning behind the NA's.
annuals_biomass <- subset(annuals_biomass, !is.na(mass))
# plot_id contains the same information as treatment_code, therefore it will be dropped
annuals_biomass <- subset(annuals_biomass, select = -c(plot_id))
rm(vec)
# Begin by dropping the date variable for similar reasons as its removal from annuals_biomass
annuals_composition <- subset(annuals_composition, select=-c(date))
# Observations of cover_type == "sampled" contain no pertinent information, therefore, they will be dropped
annuals_composition <- subset(annuals_composition, cover_type != "sampled")
# Similarly, cover_category contains no useful information for this analysis and will therefore be dropped.
annuals_composition <- subset(annuals_composition, select = -c(cover_category))
# Additionally, drop the collector variable. Since this variable is not shared with biomass it cannot be used for analysis.
annuals_composition <- subset(annuals_composition, select = -c(collector))
# Now, collate the data by cover_type and set NA values to 0. That is, NA values are assumed to be observations where the plant was not observed.
annuals_composition_collated <- annuals_composition %>%
pivot_wider(names_from = cover_type, values_from = cover_amount)
annuals_composition_collated[is.na(annuals_composition_collated)] <- 0
annuals_composition <- annuals_composition_collated
# Finally, note that the observation: site_code == "PWP", plot_id == 33, treatment_code == "C1", location_within_plot == "P", subplot == 2, and year == "2013"; has a far outlying total_shrub_cover variable value (7.000). It is assumed that this was a mistake in data collection and as such will be set as the sum of all other observed covers.
# This task is ignored for the time being as this data will not be used for analysis.
# Remove unused variables from the environment
rm(annuals_composition_collated, annuals_composition)
# Remove unused dataset from the environment
rm(plant_root_simulator)
# Remove unused dataset from the environment
rm(fertilizer_application)
rm(tissue_chn, tissue_icp, stem_growth)
# Examine the notes variable values and see if there are any observations which should be removed
unique(atmospheric_deposition$notes)
# None of the observations appear to need to be removed, therefore, the notes variable can be safely dropped.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(notes))
# Remove the all observations where field_id == "KCl_blank" this obesrvation is not useful for analysis.
atmospheric_deposition <- subset(atmospheric_deposition, field_id != "KCl_blank")
# Note that run_id is not useful for this analysis, it will therefore be removed.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(run_id))
# Now collate the data set such that it is in a usable format.
atmospheric_deposition <- atmospheric_deposition %>% pivot_wider(names_from = analyte_name, values_from = concentration)
# Note that there are a number of observations where either Ammonia or Nitrate/Nitrite are NA. There is enough data available that these observations can be safety dropped.
atmospheric_deposition <- subset(atmospheric_deposition, !is.na(Ammonia) & !is.na(`NItrate/Nitrite`))
# Remove observations which cannot be used for analysis based on field_id value.
atmospheric_deposition <- subset(atmospheric_deposition, !(field_id %in% c("resin.KCl.1", "resin.KCl.2", "resin.KCl.3")))
# Format the date in atmospheric deposition and remove old date variable
atmospheric_deposition$year <- format(as.Date(atmospheric_deposition$collection_date, format = "%Y-%m-%d"), "%Y")
atmospheric_deposition$month <- format(as.Date(atmospheric_deposition$collection_date, format="%Y-%m-%d"), "%m")
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(collection_date))
# Change month variable into a more interpretable season variable
atmospheric_deposition$month <- as.numeric(atmospheric_deposition$month)
atmospheric_deposition$season <- ifelse(atmospheric_deposition$month %in% c(2, 3, 4), "Spring",
ifelse(atmospheric_deposition$month %in% c(5,6,7), "Summer",
ifelse(atmospheric_deposition$month %in% c(8,9,10), "Fall", "Winter")))
# Observations for winter of a given year can be made in January of the following year.
atmospheric_deposition$year <- as.numeric(atmospheric_deposition$year)
atmospheric_deposition$year[atmospheric_deposition$month == 1] =
atmospheric_deposition$year[atmospheric_deposition$month == 1] - 1
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(month))
# Remove observations of atmospheric_deposition which contain no usable information
atmospheric_deposition <- subset(atmospheric_deposition, year != 2008 & !(year == 2009 & season == "Spring"))
atmospheric_deposition <- atmospheric_deposition[!grepl("CNTL", atmospheric_deposition$field_id), ]
atmospheric_deposition <- subset(atmospheric_deposition, !(site_code %in% c("GTW", "LVE")))
atmospheric_deposition <- atmospheric_deposition[!grepl("MONTH", atmospheric_deposition$field_id), ]
# Create a single measure of atmospheric deposition for each season at each site by taking the average of all observations for that site, season and year.
atmospheric_deposition <- subset(atmospheric_deposition, select = -c(field_id))
atmospheric_deposition <- atmospheric_deposition %>%
group_by(site_code, year, season) %>%
summarize(Ammonia = mean(Ammonia), `Nitrate/Nitrite` = mean(`NItrate/Nitrite`))
atmospheric_deposition <- data.frame(atmospheric_deposition)
# Amend data with all unique combinations of season, year, and site_code
atmospheric_deposition <- atmospheric_deposition %>% complete(site_code, year, season)
# Investigate the number of missing observations
print(paste("There are", sum(is.na(atmospheric_deposition$Ammonia)), "missing Ammonia measurements and", sum(is.na(atmospheric_deposition$`Nitrate.Nitrite`)), "missing Nitrate/Nitrite measurements."))
print(paste("There are a total of", nrow(atmospheric_deposition), "observations in the atmospheric deposition data set."))
# Remove unused dataset from memory
rm(atmospheric_deposition)
View(annuals_biomass)
annuals_biomass$region <- NA
annuals_biomass$region[annuals_biomass$site_code %in% c("DBG", "MVP", "PWP", "SME", "SMW")] <- "core"
annuals_biomass$region[annuals_biomass$site_code %in% c("EME", "EMW", "SNE", "SNW", "WTM")] <- "west"
annuals_biomass$region[annuals_biomass$site_code %in% c("LDP", "MCN", "MCS", "SRR", "UMP")] <- "east"
x <- as.matrix(subset(annuals_biomass, select=-c(mass)))
View(x)
x <- subset(annuals_biomass, select=-c(mass))
y <- log(annuals_biomass$mass)
?log(annuals_biomass)
sum(annuals_biomass$mass)
sum(annuals_biomass$mass==0)
## Analysis
Begin by applying the log transformation to the response variable and formatting the data for the rest of analysis. Note some observed masses were zero, therefore a small constant value was added to each mass observation prior to the log transformation.
```{r}
x <- subset(annuals_biomass, select=-c(mass))
y <- log(annuals_biomass$mass + .0001)
x <- subset(annuals_biomass, select=-c(mass))
y <- log(annuals_biomass$mass + .0001)
sum(annuals_biomass$mass<0)
# Drop all obserations where mass is negative, there is no useful info to be gleamed by them
annuals_biomass <- annuals_biomass[annuals_biomass$mass >= 0]
# Drop all obserations where mass is negative, there is no useful info to be gleamed by them
annuals_biomass <- annuals_biomass[annuals_biomass$mass >= 0,]
y <- log(annuals_biomass$mass + .0001)
library("rstan")
library("rstan")
library("bayesplot")
library("ggplot2")
```{r, results='hide', warning=FALSE}
library("rstan")
library("bayesplot")
library("ggplot2")
